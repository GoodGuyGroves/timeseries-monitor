#!/usr/bin/env bash
#
# Creator: Russell Groves - rgroves@arago.de
# GitHub: https://github.com/GoodGuyGroves
# Date: 11/02/19
# Version: 0.1
#
# Description: This just gets and sets environment variables.

set -e

ENV=/opt/autopilot/env

printf "Checking if ${ENV} exists...\n"

if [[ ! -f "${ENV}" ]]; then
    printf "Creating ${ENV}\n"
    touch "${ENV}"
    chmod +x "${ENV}"
    printf "#!/usr/bin/env bash\n" > "${ENV}"

    printf "All settings can be changed in: ${ENV}\n"

    # https://stackoverflow.com/questions/59895/get-the-source-directory-of-a-bash-script-from-within-the-script-itself
    findpath () {
        SOURCE="${BASH_SOURCE[0]}"
        while [ -h "$SOURCE" ]; do
            DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
            SOURCE="$(readlink "$SOURCE")"
            [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
            done
        TIMESERIES_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    }

    printf "Checking if timeseries-monitor root is set...\n"
    if [[ -z "${TIMESERIES_ROOT}" ]]; then
        # I use a function to set the path so as not to export local vars like ${SOURCE} or ${DIR}
        findpath
        printf "TIMESERIES_ROOT=${TIMESERIES_ROOT}\n" >> "${ENV}"
        printf "Setting timeseries-monitor root to: ${TIMESERIES_ROOT}\n"
    fi

    printf "Checking if HIRO Home Directory is set...\n"
    if [[ -z "${HOME_DIR}" ]]; then
        HOME_DIR=/opt/autopilot
        printf "HOME_DIR=${HOME_DIR}\n" >> "${ENV}"
        printf "Setting HIRO Home Directory to: ${HOME_DIR}\n"
    fi

    printf "Checking if the HIRO node type is set...\n"
    if [[ -z "${HIRO_NODE_TYPE}" ]]; then
        source "${TIMESERIES_ROOT}"/_getnodetype
        printf "Setting HIRO node type to: ${HIRO_NODE_TYPE}\n"
    fi

    printf "Checking if additional usernames are set for getting PIDs...\n"
    if [[ -z "${ADDITIONAL_USERS}" ]]; then
        printf "ADDITIONAL_USERS=\"\"\n" >> "${ENV}"
        printf "Additional users are set as: ${ADDITIONAL_USERS}\n"
    fi
else
    printf "Loading ${ENV}\n"
    source "${ENV}"
fi

